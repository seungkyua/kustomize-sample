apiVersion: openinfradev.github.com/v1
kind: HelmValuesTransformer
metadata:
  name: site

global:
  clusterName: cluster.local
  serviceMeshControlNodeSelector:
    servicemesh: enabled
  serviceMeshIngressNodeSelector:
    taco-ingress-gateway: enabled
  serviceMeshEgressNodeSelector:
    taco-egress-gateway: enabled
  ingressGatewayLabel: istio-ingress-gateway
  egressGatewayLabel: istio-egress-gateway

charts:
- name: istiod
  override:
    revision: ""
    pilot.image: istio/pilot:1.13.1
    pilot.traceSampling: 1.0
    pilot.nodeSelector: $(serviceMeshControlNodeSelector)
    global:
      istioNamespace: istio-system
      hub: docker.io/istio
      tag: 1.13.1
      proxy:
        image: proxyv2
        tracer: "zipkin"
      tracer:
        zipkin: 
          address: "jaeger-operator-jaeger-collector.istio-system:9411"

- name: istio-ingress-gateway
  override:
    image: istio/proxyv2:1.13.1
    revision: ""
    replicaCount: 1
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 80
    service.type: LoadBalancer
    resources.requests.cpu: 1000m
    resources.requests.memory: 1024Mi
    resources.limits.cpu: 2000m
    resources.limits.memory: 2048Mi
    labels:
      app: $(ingressGatewayLabel)
    nodeSelector: $(serviceMeshIngressNodeSelector)
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: $(ingressGatewayLabel)
          topologyKey: "kubernetes.io/hostname"

- name: istio-egress-gateway
  override:
    image: istio/proxyv2:1.13.1
    revision: ""
    replicaCount: 1
    autoscaling.enabled: false
    service.type: ClusterIP
    resources.requests.cpu: 1000m
    resources.requests.memory: 1024Mi
    resources.limits.cpu: 2000m
    resources.limits.memory: 2048Mi
    labels:
      app: $(egressGatewayLabel)
    nodeSelector: $(serviceMeshEgressNodeSelector)
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: $(egressGatewayLabel)
          topologyKey: "kubernetes.io/hostname"

- name: jaeger-operator
  override:
    nodeSelector: $(serviceMeshControlNodeSelector)
    image.repository: jaegertracing/jaeger-operator
    image.tag: 1.29.1

- name: servicemesh-jaeger-resource
  override:
    sampling.param: 100
    storage.esIndexCleaner:
      enabled: false
      numberOfDays: 14
    collector:
      image: jaegertracing/jaeger-collector:1.29.0
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: servicemesh
                operator: In
                values:
                - enabled
    storage:
      esIndexCleaner:
        enabled: true
        image: jaegertracing/jaeger-es-index-cleaner:1.29.0
        numberOfDays: 7
        schedule: "55 04 * * *"
      options:
        es:
          serverUrls: https://eck-elasticsearch-es-http.lma.svc:9200
          username: taco-jaeger
          password: password
    query:
      image: jaegertracing/jaeger-query:1.29.0
      basePath: /jaeger
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: servicemesh
                operator: In
                values:
                - enabled
    agent:
      image: jaegertracing/jaeger-agent:1.29.0
    elasticsearch:
      image:
        repository: docker.io/nginxinc/nginx-unprivileged
        tag: 1.19-alpine
      host: eck-elasticsearch-es-http.lma.svc.$(clusterName)
      user:
        enabled: true
        username: taco-jaeger
        password: password

- name: kiali-operator
  override:
    nodeSelector: $(serviceMeshControlNodeSelector)
    image.repo: quay.io/kiali/kiali-operator
    image.tag: v1.45.1
    allowAdHocKialiImage: true

- name: servicemesh-kiali-resource
  override:
    auth.strategy: anonymous
    deployment.image_name: quay.io/kiali/kiali
    deployment.image_version: v1.45.1
    deployment.nodeSelector: $(serviceMeshControlNodeSelector)
    externalServices.prometheus.url: http://lma-prometheus.lma.svc:9090
    externalServices.tracing.inClusterUrl: http://jaeger-operator-jaeger-query.istio-system:16686/jaeger
    externalServices.grafana.auth.type: basic
    externalServices.grafana.auth.username: admin
    externalServices.grafana.auth.password: password
    externalServices.grafana.inClusterUrl: http://grafana.lma.svc:80
    externalServices.grafana.url: https://grafana-v2.taco-cat.xyz
    server.webRoot: /kiali
